name: Prod CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  pr_checks:
    name: "PR Checks (Lint, Unit Tests, Build)"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt flake8

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. Mirrors template-sender-engine.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests
        run: |
          # Install explicit test dependencies
          pip install boto3 botocore twilio pytest pytest-env openai
          
          # Debug: List installed packages
          pip list | grep -E 'boto|twilio|openai'
          
          # Set Python path to include src
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          
          # Set AWS region for tests (default to eu-north-1 if not set)
          export AWS_DEFAULT_REGION=eu-north-1
          
          # Run the tests
          pytest tests/unit/

      - name: Build SAM application (check only)
        run: sam build --use-container

  build-and-deploy-prod:
    name: "Build & Deploy to Prod"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::337909745089:role/GitHubActions-replies-engine-prod
          aws-region: eu-north-1

      - name: Build SAM application
        run: sam build --use-container

      - name: Deploy SAM application to Prod
        run: |
          sam deploy \
            --stack-name replies-engine-prod \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --parameter-overrides EnvironmentName=prod LogLevel=INFO \
            --resolve-s3 \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset 