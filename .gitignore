# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg
venv/
.env

# Mac OS
.DS_Store
.AppleDouble
.LSOverride
._*

# AWS
.aws-sam/
samconfig.toml

# IDE
.idea/
.vscode/

# Node (for AWS CDK)
node_modules/

# Project Specific Ignores
replies_engine_docs/example/
template-sender-engine/

# Ignore installed packages within staging_lambda
src/staging_lambda/__pycache__/
src/staging_lambda/*.dist-info/
src/staging_lambda/*.egg-info/
src/staging_lambda/bin/
src/staging_lambda/*.zip
src/*.zip
src/staging_lambda/aio*/
src/staging_lambda/attr*/
src/staging_lambda/awscli/
src/staging_lambda/boto3/
src/staging_lambda/botocore/
src/staging_lambda/certifi/
src/staging_lambda/charset_normalizer/
src/staging_lambda/colorama/
src/staging_lambda/dateutil/
src/staging_lambda/docutils/
src/staging_lambda/frozenlist/
src/staging_lambda/idna/
src/staging_lambda/iniconfig/
src/staging_lambda/jmespath/
src/staging_lambda/jwt/
src/staging_lambda/multidict/
src/staging_lambda/packaging/
src/staging_lambda/pluggy/
src/staging_lambda/propcache/
src/staging_lambda/pyasn1/
src/staging_lambda/pytest/
src/staging_lambda/_pytest/
src/staging_lambda/yaml/
src/staging_lambda/_yaml/
src/staging_lambda/requests/
src/staging_lambda/rsa/
src/staging_lambda/s3transfer/
src/staging_lambda/six.py
src/staging_lambda/py.py
src/staging_lambda/twilio/
src/staging_lambda/urllib3/
src/staging_lambda/yarl/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class$

# C extensions
*.so

# Distribution / packaging
.Python
build/
dev-requirements.txt
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
.pytest_cache/
.pytest_cache/*
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.hypothesis/*
.hypothesis/

# Translations
*.mo
*.pot
*.po

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
sessions/

# Environments
.env
.venv
venv/
ENV/
env/
ENV/

# Spyder project settings
.spyderproject
.spyderworkspace

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Virtual environment
.env
.venv
venv/
ENV/
env/

# macOS specific
.DS_Store

# SAM / CloudFormation build artifacts
.aws-sam/
*.zip
*.yaml.packaged

# Terraform
.terraform/
*.tfstate
*.tfstate.*
crash.log

# Serverless Framework
.serverless/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build output
.nuxt
# Nuxt.js generated files/folders
.output/
components.d.ts
imports.d.ts
types/

# VuePress cache and temp directory
.vuepress/dist
.vuepress/.temp

# Docusaurus cache and build output
.docusaurus

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress output directory
.vuepress/dist

# Serverless directories
.serverless

# IDE Integration Files
.idea/
*.iml
.vscode/
*.code-workspace

# Temporary files
*~
*.swp
*.swo

# Swagger Export (if generated)
swagger_export.json

# Logs
*.log 